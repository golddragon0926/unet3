# project root working directory, automatically read by hydra (.../UNet3P)
WORK_DIR: ${hydra:runtime.cwd}
SAVE_DIR: ${WORK_DIR}/results  # 결과 저장 디렉토리 설정

CLASS_COLOR_MAP:
  0 : [0, 255, 0]  # [RGB, CLASS_ID]
  1 : [124, 10, 4]

DATA_PREPARATION:
  # unprocessed LiTS scan data paths, for custom data training skip this section details
  SCANS_TRAIN_DATA_PATH: "/data/Training Batch 2/"
  SCANS_VAL_DATA_PATH: "/data/Training Batch 1/"

  # Resize scans to model input size
  RESIZED_HEIGHT: ${INPUT.HEIGHT}
  RESIZED_WIDTH: ${INPUT.WIDTH}

  # Clip scans value in given range
  SCAN_MIN_VALUE: -200
  SCAN_MAX_VALUE: 250

DATASET:
  # paths should be relative from project root path
  TRAIN:
    IMAGES_PATH: "/data/train/images"
    MASK_PATH: "/data/train/mask"
  VAL:
    IMAGES_PATH: "/data/val/images"
    MASK_PATH: "/data/val/mask"


MODEL:
  # available variants are unet3plus, unet3plus_deepsup, unet3plus_deepsup_cgm
  TYPE: "tiny_unet3plus"
  WEIGHTS_FILE_NAME: model_${MODEL.TYPE}

SEED: 5  # for result's reproducibility
VERBOSE: 1  # For logs printing details, available options are 0, 1, 2
DATALOADER_WORKERS: 3  # number of workers used for data loading
SHOW_CENTER_CHANNEL_IMAGE: False  # only true for UNet3+ for custom dataset it should be False

# Model input shape
INPUT:
#  HEIGHT: 320
#  WIDTH: 320
  HEIGHT: 512
  WIDTH: 512
  CHANNELS: 3

# Model output classes
OUTPUT:
  CLASSES: 3


HYPER_PARAMETERS:
  EPOCHS: 50
  BATCH_SIZE: 2  # specify per gpu batch size
  LEARNING_RATE: 3e-4  # 1e-3


CALLBACKS:
  # paths should be relative from project root path
  TENSORBOARD:
    PATH: "/checkpoint/tb_logs"

  EARLY_STOPPING:
    PATIENCE: 20

  MODEL_CHECKPOINT:
    PATH: "/checkpoint"
    SAVE_WEIGHTS_ONLY: False
    SAVE_BEST_ONLY: False

  CSV_LOGGER:
    PATH: "/checkpoint"
    APPEND_LOGS: False


PREPROCESS_DATA:
  RESIZE:
    VALUE: True  # if True, resize to input height and width
    HEIGHT: ${INPUT.HEIGHT}
    WIDTH: ${INPUT.WIDTH}

  IMAGE_PREPROCESSING_TYPE: "normalize"

  NORMALIZE_MASK:
    VALUE: False  # if True, divide mask by given value
    NORMALIZE_VALUE: 255

  SHUFFLE:
    TRAIN:
      VALUE: True
    VAL:
      VALUE: False


USE_MULTI_GPUS:
  VALUE: False  # If True use multiple gpus for training
  # GPU_IDS: Could be integer or list of integers.
  # In case Integer: if integer value is -1 then it uses all available gpus.
  # otherwise if positive number, then use given number of gpus.
  # In case list of Integers: each integer will be considered as gpu id
  # e.g. [4, 5, 7] means use gpu 5,6 and 8 for training/evaluation
  GPU_IDS: -1


# to stop hydra from storing logs files
defaults:
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled

hydra:
  output_subdir: null
